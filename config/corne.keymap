/*
 * My Corne Layout
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/** -- Layers -- **/
#define BASE 0
#define NUMBER 1
#define SYMBOL 2
#define NAV 3

/** -- Key Positions for Positional Hold Tap -- **/
#define LEFT_HAND_KEYS  \
     0  1  2  3  4  5   \
    12 13 14 15 16 17   \
    24 25 26 27 28 29

#define RIGHT_HAND_KEYS \
     6  7  8  9 10 11   \
    18 19 20 21 22 23   \
    30 31 32 33 34 35

#define THUMB_KEYS  \
    36 37 38    39 40 41

/** -- Home Row Mods -- **/
#define HRM_HOLDING_TYPE "tap-preferred"
#define HRM_HOLDING_TIME 270
#define HRM_STREAK_DECAY 250
#define HRM_REPEAT_DECAY 300

#define HRM_INDEX_HOLDING_TYPE "tap-preferred"
#define HRM_INDEX_HOLDING_TIME 170
#define HRM_INDEX_STREAK_DECAY 150
#define HRM_INDEX_REPEAT_DECAY 300

/ {
    behaviors {
        /** -- Home Row Mods -- **/
        hrm_l: home_row_mod_left {
            label = "Home Row Mod: Left";
            compatible = "zmk,behavior-hold-tap";
            flavor = HRM_HOLDING_TYPE;
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            hold-trigger-on-release; // Wait for other home row mods
            tapping-term-ms = <HRM_HOLDING_TIME>;
            quick-tap-ms = <HRM_REPEAT_DECAY>;
            require-prior-idle-ms = <HRM_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        hrm_r: home_row_mod_right {
            label = "Home Row Mod: Right";
            compatible = "zmk,behavior-hold-tap";
            flavor = HRM_HOLDING_TYPE;
            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            hold-trigger-on-release; // Wait for other home row mods
            tapping-term-ms = <HRM_HOLDING_TIME>;
            quick-tap-ms = <HRM_REPEAT_DECAY>;
            require-prior-idle-ms = <HRM_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        hrm_li: home_row_mod_left_index {
            label = "Home Row Mod: Left Index";
            compatible = "zmk,behavior-hold-tap";
            flavor = HRM_INDEX_HOLDING_TYPE;
            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
            hold-trigger-on-release; // Wait for other home row mods
            tapping-term-ms = <HRM_INDEX_HOLDING_TIME>;
            quick-tap-ms = <HRM_INDEX_REPEAT_DECAY>;
            require-prior-idle-ms = <HRM_INDEX_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        hrm_ri: home_row_mod_right_index {
            label = "Home Row Mod: Right Index";
            compatible = "zmk,behavior-hold-tap";
            flavor = HRM_INDEX_HOLDING_TYPE;
            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS>;
            hold-trigger-on-release; // Wait for other home row mods
            tapping-term-ms = <HRM_INDEX_HOLDING_TIME>;
            quick-tap-ms = <HRM_INDEX_REPEAT_DECAY>;
            require-prior-idle-ms = <HRM_INDEX_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        /* -- Layer Movement -- */
        ld: layer_dance {
            label = "Layer Dance";
            compatible = "zmk,behavior-hold-tap";
            flavor = "hold-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <150>;
            #binding-cells = <2>;
            bindings = <&mo>, <&to>;
        };

        /* -- Extra Functionality -- */
        dels: delete_directions {
            label = "Two Deletes: Back and Forward";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LALT|MOD_RALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base Layer";
            bindings = <
&kp ESC  &kp B                  &kp Y              &kp O              &kp U                 &kp SQT    &kp SEMI   &kp L                  &kp D               &kp W               &kp V                   &kp Z
&kp TAB  &hrm_l LEFT_CONTROL C  &hrm_l LEFT_ALT I  &hrm_l LEFT_GUI E  &hrm_li LEFT_SHIFT A  &kp COMMA  &kp DOT    &hrm_ri RIGHT_SHIFT H  &hrm_r RIGHT_GUI T  &hrm_r RIGHT_ALT S  &hrm_r RIGHT_CONTROL N  &kp RET
&none    &kp G                  &kp X              &kp J              &kp K                 &kp MINUS  &kp FSLH   &kp R                  &kp M               &kp F               &kp P                   &kp Q
                                                   &ld NAV NAV        &ld NUMBER NUMBER     &dels      &kp SPACE  &ld SYMBOL SYMBOL      &none
            >;
        };

        number_layer {
            label = "Number Layer";
            bindings = <
&trans  &none             &none         &none         &none           &none   &kp MINUS     &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK  &kp PERCENT
&trans  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &none   &kp PLUS      &kp NUMBER_4       &kp NUMBER_5  &kp NUMBER_6  &kp FSLH      &trans
&none   &none             &none         &none         &none           &none   &kp NUMBER_0  &kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3  &kp DOT       &kp EQUAL
                                        &ld NAV NAV   &to BASE        &trans  &trans        &ld SYMBOL SYMBOL  &none
            >;
        };

        symbol_layer {
            label = "Symbol Layer";
            bindings = <
&trans  &kp GRAVE                  &kp TILDE              &kp BACKSLASH               &kp EXCLAMATION            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ASTERISK                   &kp SLASH                 &kp DOUBLE_QUOTES              &kp AMPERSAND                  &kp PLUS
&trans  &hrm_l LEFT_CONTROL CARET  &hrm_l LEFT_ALT EQUAL  &hrm_l LEFT_GUI UNDERSCORE  &hrm_li LEFT_SHIFT DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &hrm_ri RIGHT_SHIFT SEMICOLON  &hrm_r RIGHT_GUI AT_SIGN  &hrm_r RIGHT_ALT SINGLE_QUOTE  &hrm_r RIGHT_CONTROL QUESTION  &trans
&none   &kp LESS_THAN              &kp PIPE               &kp MINUS                   &kp GREATER_THAN           &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON                      &kp HASH                  &kp COMMA                      &kp PERIOD                     &kp PERCENT
                                                          &ld NAV NAV                 &ld NUMBER NUMBER          &trans                &trans                 &to BASE                       &none
            >;
        };

        nav_layer {
            label = "Navigation Layer";
            bindings = <
&trans  &BT_CLR_ALL &none      &none     &BT_CLR             &none       &none   &none              &kp UP_ARROW    &none            &none  &none
&trans  &BT_SEL 0   &BT_SEL 1  &BT_SEL 2 &BT_SEL 3          &BT_SEL 4   &none   &kp LEFT_ARROW     &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &trans
&none   &none       &none      &none     &none              &none       &none   &none              &none           &none            &none  &none
                              &to BASE  &ld NUMBER NUMBER  &trans      &trans  &ld SYMBOL SYMBOL  &none
            >;
        };

        template_layer {
            label = "TEMPLATE: Normal Layer";
            bindings = <
&trans  &none  &none  &none  &none  &none   &none   &none  &none  &none  &none  &none
&trans  &none  &none  &none  &none  &none   &none   &none  &none  &none  &none  &trans
&none   &none  &none  &none  &none  &none   &none   &none  &none  &none  &none  &none
                      &none  &none  &trans  &trans  &none  &none
            >;
        };
    };
};
